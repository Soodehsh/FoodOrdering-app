{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sodee\\\\Downloads\\\\food\\\\foodOrdering\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReduser = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedItems = state.items.concat(action.item);\n    const updatedTtalAmount = state.totalAmount + action.item.price * action.time.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTtalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReduser, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 12\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/Sodee/Downloads/food/foodOrdering/src/store/CartProvider.js"],"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReduser","state","action","type","updatedItems","concat","item","updatedTtalAmount","price","time","amount","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","id","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAE,EADc;AAErBC,EAAAA,WAAW,EAAE;AAFQ,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAOC,MAAP,KAAiB;AACjC,MAAGA,MAAM,CAACC,IAAP,KAAgB,KAAnB,EAAyB;AACzB,UAAMC,YAAY,GAAGH,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBH,MAAM,CAACI,IAA1B,CAArB;AACA,UAAMC,iBAAiB,GAAGN,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACI,IAAP,CAAYE,KAAZ,GAAoBN,MAAM,CAACO,IAAP,CAAYC,MAA9E;AAEA,WAAO;AACHZ,MAAAA,KAAK,EAAEM,YADJ;AAEHL,MAAAA,WAAW,EAAEQ;AAFV,KAAP;AAIC;;AAED,SAAOV,gBAAP;AACH,CAZD;;AAeA,MAAMc,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCnB,UAAU,CAACK,WAAD,EAAcH,gBAAd,CAAlD;;AACA,QAAMkB,oBAAoB,GAAIT,IAAD,IAAU;AACnCQ,IAAAA,kBAAkB,CAAC;AAACX,MAAAA,IAAI,EAAC,KAAN;AAAaG,MAAAA,IAAI,EAAEA;AAAnB,KAAD,CAAlB;AACH,GAFD;;AAGA,QAAMU,yBAAyB,GAAIC,EAAD,IAAQ;AACtCH,IAAAA,kBAAkB,CAAC;AAACX,MAAAA,IAAI,EAAE,QAAP;AAAiBc,MAAAA,EAAE,EAAEA;AAArB,KAAD,CAAlB;AACH,GAFD;;AAKH,QAAMC,WAAW,GAAG;AAChBpB,IAAAA,KAAK,EAAEe,SAAS,CAACf,KADD;AAEhBC,IAAAA,WAAW,EAAEc,SAAS,CAACd,WAFP;AAGhBoB,IAAAA,OAAO,EAAEJ,oBAHO;AAIhBK,IAAAA,UAAU,EAAEJ;AAJI,GAApB;AAOG,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACFN,KAAK,CAACS;AADJ;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH,CApBD;;GAAMV,Y;;KAAAA,Y;AAqBF,eAAeA,YAAf","sourcesContent":["import { useReducer } from \"react\";\r\nimport CartContext from \"./cart-context\";\r\n\r\nconst defaultCartState = {\r\n    items: [],\r\n    totalAmount: 0\r\n};\r\n\r\nconst cartReduser = (state,action) =>{\r\n    if(action.type === 'ADD'){\r\n    const updatedItems = state.items.concat(action.item);\r\n    const updatedTtalAmount = state.totalAmount + action.item.price * action.time.amount;\r\n\r\n    return {\r\n        items: updatedItems,\r\n        totalAmount: updatedTtalAmount\r\n    };\r\n    }\r\n\r\n    return defaultCartState;\r\n};\r\n\r\n\r\nconst CartProvider = (props) => {\r\n    const [cartState, dispatchCartAction] = useReducer(cartReduser, defaultCartState);\r\n    const addItemToCartHandler = (item) => {\r\n        dispatchCartAction({type:'ADD', item: item})\r\n    };\r\n    const removeItemFromCartHandler = (id) => {\r\n        dispatchCartAction({type: 'REMOVE', id: id})\r\n    };\r\n\r\n\r\n const cartContext = {\r\n     items: cartState.items,\r\n     totalAmount: cartState.totalAmount,\r\n     addItem: addItemToCartHandler,\r\n     removeItem: removeItemFromCartHandler\r\n };\r\n\r\n    return <CartContext.Provider value={cartContext}>\r\n        {props.children}\r\n    </CartContext.Provider>\r\n};\r\n    export default CartProvider;\r\n"]},"metadata":{},"sourceType":"module"}