{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sodee\\\\Downloads\\\\food\\\\foodOrdering\\\\src\\\\components\\\\Cart\\\\Checkout.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from \"react\";\nimport Classes from \"./Checkout.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = value => value.trim() === \"\";\n\nconst isFiveChars = value => value.trim().length === 5;\n\nconst Checkout = props => {\n  _s();\n\n  const [formInputsValidity, setFormInputsValidity] = useState({\n    Name: true,\n    Street: true,\n    HouseNumber: true,\n    PostalCode: true,\n    City: true,\n    Phone: true\n  });\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const houseNumberInputRef = useRef();\n  const postalCodeInputRef = useRef();\n  const cityInputRef = useRef();\n  const phoneInputRef = useRef();\n\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredHouseNumber = houseNumberInputRef.current.value;\n    const enteredPostalCode = postalCodeInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n    const enteredPhone = phoneInputRef.current.value;\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredHouseNumberIsValid = !isEmpty(enteredHouseNumber);\n    const enteredPostalCodeIsValid = isFiveChars(enteredPostalCode);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    const enteredPhoneIsValid = !isEmpty(enteredPhone);\n    setFormInputsValidity({\n      Name: enteredNameIsValid,\n      Street: enteredStreetIsValid,\n      HouseNumber: enteredHouseNumberIsValid,\n      PostalCode: enteredPostalCodeIsValid,\n      City: enteredCityIsValid,\n      Phone: enteredPhoneIsValid\n    });\n    const formIsValid = enteredNameIsValid && enteredStreet && enteredHouseNumber && enteredPostalCode && enteredCity && enteredPhone;\n\n    if (!formIsValid) {\n      return;\n    }\n\n    props.onConfirm({\n      Name: enteredName,\n      Street: enteredStreet,\n      HouseNumber: enteredHouseNumber,\n      PostalCode: enteredPostalCode,\n      City: enteredCity,\n      Phone: enteredPhone\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: Classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: Classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), !formInputsValidity.Name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid name!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"Street\",\n        children: \"Street Name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), !formInputsValidity.Street && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid street name!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"HousrNr\",\n        children: \"House Number: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"houseNb\",\n        ref: houseNumberInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), !formInputsValidity.HouseNumber && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid house number!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"PostalCode\",\n        children: \"Postal Code: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postalCode\",\n        ref: postalCodeInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), !formInputsValidity.PostalCode && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid postal code!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"City\",\n        children: \"City: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), !formInputsValidity.City && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid city!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"Phone\",\n        children: \"Phone Number: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"phone\",\n        ref: phoneInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), !formInputsValidity.Phone && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid phone number!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkout, \"X0fljqmdvAPfSwQuPuqMTMGMtuY=\");\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["C:/Users/Sodee/Downloads/food/foodOrdering/src/components/Cart/Checkout.js"],"names":["useRef","useState","Classes","isEmpty","value","trim","isFiveChars","length","Checkout","props","formInputsValidity","setFormInputsValidity","Name","Street","HouseNumber","PostalCode","City","Phone","nameInputRef","streetInputRef","houseNumberInputRef","postalCodeInputRef","cityInputRef","phoneInputRef","confirmHandler","event","preventDefault","enteredName","current","enteredStreet","enteredHouseNumber","enteredPostalCode","enteredCity","enteredPhone","enteredNameIsValid","enteredStreetIsValid","enteredHouseNumberIsValid","enteredPostalCodeIsValid","enteredCityIsValid","enteredPhoneIsValid","formIsValid","onConfirm","form","control","actions","onCancel"],"mappings":"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","sourcesContent":["import { useRef, useState } from \"react\";\r\nimport Classes from \"./Checkout.module.css\";\r\n\r\nconst isEmpty = (value) => value.trim() === \"\";\r\nconst isFiveChars = (value) => value.trim().length === 5;\r\nconst Checkout = (props) => {\r\n  const [formInputsValidity, setFormInputsValidity] = useState({\r\n    Name: true,\r\n    Street: true,\r\n    HouseNumber: true,\r\n    PostalCode: true,\r\n    City: true,\r\n    Phone: true,\r\n  });\r\n  const nameInputRef = useRef();\r\n  const streetInputRef = useRef();\r\n  const houseNumberInputRef = useRef();\r\n  const postalCodeInputRef = useRef();\r\n  const cityInputRef = useRef();\r\n  const phoneInputRef = useRef();\r\n  const confirmHandler = (event) => {\r\n    event.preventDefault();\r\n    const enteredName = nameInputRef.current.value;\r\n    const enteredStreet = streetInputRef.current.value;\r\n    const enteredHouseNumber = houseNumberInputRef.current.value;\r\n    const enteredPostalCode = postalCodeInputRef.current.value;\r\n    const enteredCity = cityInputRef.current.value;\r\n    const enteredPhone = phoneInputRef.current.value;\r\n\r\n    const enteredNameIsValid = !isEmpty(enteredName);\r\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\r\n    const enteredHouseNumberIsValid = !isEmpty(enteredHouseNumber);\r\n    const enteredPostalCodeIsValid = isFiveChars(enteredPostalCode);\r\n    const enteredCityIsValid = !isEmpty(enteredCity);\r\n    const enteredPhoneIsValid = !isEmpty(enteredPhone);\r\n\r\n    setFormInputsValidity({\r\n      Name: enteredNameIsValid,\r\n      Street: enteredStreetIsValid,\r\n      HouseNumber: enteredHouseNumberIsValid,\r\n      PostalCode: enteredPostalCodeIsValid,\r\n      City: enteredCityIsValid,\r\n      Phone: enteredPhoneIsValid,\r\n    });\r\n\r\n    const formIsValid =\r\n      enteredNameIsValid &&\r\n      enteredStreet &&\r\n      enteredHouseNumber &&\r\n      enteredPostalCode &&\r\n      enteredCity &&\r\n      enteredPhone;\r\n    if (!formIsValid) {\r\n      return;\r\n    }\r\n\r\n    props.onConfirm({\r\n      Name: enteredName,\r\n      Street: enteredStreet,\r\n      HouseNumber: enteredHouseNumber,\r\n      PostalCode: enteredPostalCode,\r\n      City: enteredCity,\r\n      Phone: enteredPhone,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form className={Classes.form} onSubmit={confirmHandler}>\r\n      <div className={Classes.control}>\r\n        <label htmlFor=\"name\">Your Name: </label>\r\n        <input type=\"text\" id=\"name\" ref={nameInputRef} />\r\n        {!formInputsValidity.Name && <p>Please enter a valid name!</p>}\r\n      </div>\r\n      <div className={Classes.control}>\r\n        <label htmlFor=\"Street\">Street Name: </label>\r\n        <input type=\"text\" id=\"street\" ref={streetInputRef} />\r\n        {!formInputsValidity.Street && <p>Please enter a valid street name!</p>}\r\n      </div>\r\n      <div className={Classes.control}>\r\n        <label htmlFor=\"HousrNr\">House Number: </label>\r\n        <input type=\"text\" id=\"houseNb\" ref={houseNumberInputRef} />\r\n        {!formInputsValidity.HouseNumber && (\r\n          <p>Please enter a valid house number!</p>\r\n        )}\r\n      </div>\r\n      <div className={Classes.control}>\r\n        <label htmlFor=\"PostalCode\">Postal Code: </label>\r\n        <input type=\"text\" id=\"postalCode\" ref={postalCodeInputRef} />\r\n        {!formInputsValidity.PostalCode && (\r\n          <p>Please enter a valid postal code!</p>\r\n        )}\r\n      </div>\r\n      <div className={Classes.control}>\r\n        <label htmlFor=\"City\">City: </label>\r\n        <input type=\"text\" id=\"city\" ref={cityInputRef} />\r\n        {!formInputsValidity.City && <p>Please enter a valid city!</p>}\r\n      </div>\r\n\r\n      <div className={Classes.control}>\r\n        <label htmlFor=\"Phone\">Phone Number: </label>\r\n        <input type=\"text\" id=\"phone\" ref={phoneInputRef} />\r\n        {!formInputsValidity.Phone && <p>Please enter a valid phone number!</p>}\r\n      </div>\r\n      <div className={Classes.actions}>\r\n        <button type=\"button\" onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button>Confirm</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nexport default Checkout;\r\n"]},"metadata":{},"sourceType":"module"}