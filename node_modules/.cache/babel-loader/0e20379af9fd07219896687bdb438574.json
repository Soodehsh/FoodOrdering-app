{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sodee\\\\Downloads\\\\food\\\\foodOrdering\\\\src\\\\components\\\\Cart\\\\Checkout.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport Classes from './Checkout.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = value => value.trim() === '';\n\nconst isFiveChars = value => value.trim().length === 5;\n\nconst Checkout = props => {\n  _s();\n\n  const [formInputsValidity, setFormInputsValidity] = useState({\n    Name: true,\n    Street: true,\n    HouseNumber: true,\n    PostalCode: true,\n    City: true,\n    Phone: true\n  });\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const houseNumberInputRef = useRef();\n  const postalCodeInputRef = useRef();\n  const cityInputRef = useRef();\n  const phoneInputRef = useRef();\n\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredHouseNumber = houseNumberInputRef.current.value;\n    const enteredPostalCode = postalCodeInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n    const enteredPhone = phoneInputRef.current.value;\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredHouseNumberIsValid = !isEmpty(enteredHouseNumber);\n    const enteredPostalCodeIsValid = isFiveChars(enteredPostalCode);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    const enteredPhoneIsValid = !isEmpty(enteredPhone);\n    setFormInputsValidity({\n      Name: enteredNameIsValid,\n      Street: enteredStreetIsValid,\n      HouseNumber: enteredHouseNumberIsValid,\n      PostalCode: enteredPostalCodeIsValid,\n      City: enteredCityIsValid,\n      Phone: enteredPhoneIsValid\n    });\n    const formIsValid = enteredNameIsValid && enteredStreet && enteredHouseNumber && enteredPostalCode && enteredCity && enteredPhone;\n\n    if (!formIsValid) {\n      return;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: Classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: Classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 10\n      }, this), !formInputsValidity.Name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid name!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"Street\",\n        children: \"Street Name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 10\n      }, this), !formInputsValidity.Street && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid street name!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"HousrNr\",\n        children: \"House Number: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"houseNb\",\n        ref: houseNumberInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 10\n      }, this), !formInputsValidity.HouseNumber && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid house number!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 46\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"PostalCode\",\n        children: \"Postal Code: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postalCode\",\n        ref: postalCodeInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 10\n      }, this), !formInputsValidity.PostalCode && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid postal code!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 45\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"City\",\n        children: \"City: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 10\n      }, this), !formInputsValidity.City && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid city!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"Phone\",\n        children: \"Phone Number: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"phone\",\n        ref: phoneInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 10\n      }, this), !formInputsValidity.Phone && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid phone number!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: Classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Checkout, \"1vbHIV+ud1I6YJbm2vqiuBv4slw=\");\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["C:/Users/Sodee/Downloads/food/foodOrdering/src/components/Cart/Checkout.js"],"names":["useRef","useState","Classes","isEmpty","value","trim","isFiveChars","length","Checkout","props","formInputsValidity","setFormInputsValidity","Name","Street","HouseNumber","PostalCode","City","Phone","nameInputRef","streetInputRef","houseNumberInputRef","postalCodeInputRef","cityInputRef","phoneInputRef","confirmHandler","event","preventDefault","enteredName","current","enteredStreet","enteredHouseNumber","enteredPostalCode","enteredCity","enteredPhone","enteredNameIsValid","enteredStreetIsValid","enteredHouseNumberIsValid","enteredPostalCodeIsValid","enteredCityIsValid","enteredPhoneIsValid","formIsValid","form","control","actions","onCancel"],"mappings":"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","sourcesContent":["import { useRef,useState } from 'react';\r\nimport Classes from './Checkout.module.css';\r\n\r\n\r\nconst isEmpty = value => value.trim() === '';\r\nconst isFiveChars = value => value.trim().length === 5;\r\nconst Checkout = props => {\r\n    const [formInputsValidity,setFormInputsValidity]= useState({\r\n       Name:true,\r\n       Street:true,\r\n       HouseNumber:true,\r\n       PostalCode:true,\r\n       City:true,\r\n       Phone:true\r\n    });\r\n    const nameInputRef = useRef();\r\n    const streetInputRef = useRef();\r\n    const houseNumberInputRef = useRef();\r\n    const postalCodeInputRef = useRef();\r\n    const cityInputRef = useRef();\r\n    const phoneInputRef = useRef();\r\n   const confirmHandler = (event) => {\r\n       event.preventDefault();\r\n       const enteredName = nameInputRef.current.value;\r\n       const enteredStreet = streetInputRef.current.value;\r\n       const enteredHouseNumber = houseNumberInputRef.current.value;\r\n       const enteredPostalCode = postalCodeInputRef.current.value;\r\n       const enteredCity = cityInputRef.current.value;\r\n       const enteredPhone = phoneInputRef.current.value;\r\n\r\n\r\n       const enteredNameIsValid = !isEmpty(enteredName);\r\n       const enteredStreetIsValid = !isEmpty(enteredStreet);\r\n       const enteredHouseNumberIsValid = !isEmpty(enteredHouseNumber);\r\n       const enteredPostalCodeIsValid = isFiveChars(enteredPostalCode);\r\n       const enteredCityIsValid = !isEmpty(enteredCity); \r\n       const enteredPhoneIsValid = !isEmpty(enteredPhone);\r\n\r\n       setFormInputsValidity({\r\n        Name:enteredNameIsValid,\r\n        Street:enteredStreetIsValid,\r\n        HouseNumber:enteredHouseNumberIsValid,\r\n        PostalCode:enteredPostalCodeIsValid,\r\n        City:enteredCityIsValid,\r\n        Phone:enteredPhoneIsValid\r\n       });\r\n      \r\n       const formIsValid = enteredNameIsValid &&\r\n                           enteredStreet && \r\n                           enteredHouseNumber &&\r\n                           enteredPostalCode && \r\n                           enteredCity && \r\n                           enteredPhone;\r\n        if(!formIsValid){\r\n            return;\r\n        }                   \r\n   };\r\n\r\n\r\n    return <form className={Classes.form} onSubmit={confirmHandler}>\r\n        <div className={Classes.control}>\r\n         <label htmlFor=\"name\">Your Name: </label>\r\n         <input type=\"text\" id=\"name\" ref={nameInputRef} />\r\n         {!formInputsValidity.Name && <p>Please enter a valid name!</p>}\r\n        </div>\r\n        <div className={Classes.control}>\r\n         <label htmlFor=\"Street\">Street Name: </label>\r\n         <input type=\"text\" id=\"street\" ref={streetInputRef} />\r\n         {!formInputsValidity.Street && <p>Please enter a valid street name!</p>}\r\n        </div>\r\n        <div className={Classes.control}>\r\n         <label htmlFor=\"HousrNr\">House Number: </label>\r\n         <input type=\"text\" id=\"houseNb\" ref={houseNumberInputRef} />\r\n         {!formInputsValidity.HouseNumber && <p>Please enter a valid house number!</p>}\r\n        </div>\r\n        <div className={Classes.control}>\r\n         <label htmlFor=\"PostalCode\">Postal Code: </label>\r\n         <input type=\"text\" id=\"postalCode\" ref={postalCodeInputRef} />\r\n         {!formInputsValidity.PostalCode && <p>Please enter a valid postal code!</p>}\r\n        </div>\r\n        <div className={Classes.control}>\r\n         <label htmlFor=\"City\">City: </label>\r\n         <input type=\"text\" id=\"city\" ref={cityInputRef} />\r\n         {!formInputsValidity.City && <p>Please enter a valid city!</p>}\r\n        </div>\r\n    \r\n        <div className={Classes.control}>\r\n         <label htmlFor=\"Phone\">Phone Number: </label>\r\n         <input type=\"text\" id=\"phone\" ref={phoneInputRef} />\r\n         {!formInputsValidity.Phone && <p>Please enter a valid phone number!</p>}\r\n        </div>\r\n        <div className={Classes.actions}>\r\n        <button  type=\"button\" onClick={props.onCancel}>Cancel</button>\r\n        <button>Confirm</button>\r\n        </div>\r\n    </form>\r\n};\r\nexport default Checkout;"]},"metadata":{},"sourceType":"module"}